1. загрузка идеи https://www.jetbrains.com/ru-ru/idea/download/#section=windows
2. загрузка jdk(Java Development Kit ) https://www.oracle.com/java/technologies/javase-jdk11-downloads.html
3. настройка jdk https://o7planning.org/ru/10377/installing-and-configuring-java
4. настройка idea. в поле Project SDK с помощью кнопки New... указывается путь к Java SDK, который будет использоваться в проекте. 
Как правило, это поле по умолчанию уже содержит путь к SDK, который установлен на локальном компьютере. Если это поле пусто, то его надо установить.

Перезагружаем ПК
проверяем в консоли java -version

******
кратко теория

После загрузки Java пользователи получают Java Runtime Environment (JRE). 
JRE состоит из Java Virtual Machine (JVM), базовых классов платформы Java и вспомогательных библиотек платформы Java. 
JRE является областью программного обеспечения Java, используемой во время выполнения, т.е. единственным компонентом, 
который требуется для его запуска в используемом в веб-браузере.

JDK нужен для разработки (это компилятор, отладчик и т.д.).
JRE нужен для запуска Java программ (содержит в себе JVM).
JDK и JRE содержат JVM, которая нужна для запуска программ на Java.
JVM является сердцем языка программирования Java и обеспечивает независимость от платформы.


Java Development Kit является основным компонентом среды Java и предоставляет все инструменты, исполняемые и бинарные файлы, которые нужны для компиляции, 
отладки и выполнения программы на Java. JDK является платформо-зависимым программным обеспечением, поэтому есть отдельные инсталляторы для Windows, Mac и Unix-систем. 
Можно сказать, что JDK является надстройкой JRE, так как он содержит JRE с Java-компилятором, отладчиком и базовыми классами. 
Текущая версия JDK 1.8 также известна как Java 8.

JVM является сердцем языка программирования Java. Когда мы запускаем программу, JVM несет ответственность за преобразование байт-кода в машинный код. 
JVM также зависит от платформы и предоставляет основные функции, такие как управления памятью Java, сборкой мусора, и т.д. 
Мы также можем выделять определенный объем памяти для JVM. JVM является виртуальной машиной, потому что обеспечивает интерфейс, 
который не зависит от операционной системы и аппаратных средств. 
Эта независимость от аппаратного обеспечения и операционной системы дает Java-программам возможность выполняться на любом устройстве 
без необходимости внесения изменений — Write once, run anywhere (Напиши раз — запускай где угодно).

JRE является реализацией JVM, которая предоставляет платформу для выполнения Java-программ. JRE состоит из виртуальной машины Java, бинарных файлов и других классов. 
JRE не содержит инструменты для разработки (компилятор Java, отладчик и т.д). Если вы хотите запустить любую Java программу, вы должны установить JRE.

******
настройка параметров идеи
Настройка параметров JVM и свойств платформы
Мы можем настроить параметры JVM, перейдя в меню « Справка» → «Изменить пользовательские параметры виртуальной машины» . 
Ниже приведены несколько важных параметров JVM, которые мы можем установить.

–Server — позволяет выбрать виртуальную машину Java HotSpot Server

-Xms <размер> — устанавливает начальный размер кучи Java. Значение по умолчанию составляет 128 МБ. !!

-Xmx <размер> — устанавливает максимальный размер кучи Java. Значение по умолчанию составляет 750 МБ. !!

-Xss <размер> — устанавливает размер стека потока Java.

–XX — позволяет установить алгоритм GC и другие свойства.

*******

правила наименования

имена переменных и методов всегда должны начинаться с маленькой буквы.
public void getSomeValue()
int currentDayNumber

имена переменных должны быть существительными (существительные отвечают на вопросы: Кто? Что?)
int currentDayNumber

имена методов должны быть глаголами (глаголы отвечают на вопросы: Что делать? Что сделать?).
public void getSomeValue()

имена классов должны быть существительными и начинаться с заглавной буквы.
public class Main

если название состоит из нескольких слов, то для таких слов используется CamelCase.
public void setMonthSalary(int salary)

константы (финальные методы и enum классы) называются заглавными буквами, разделенными символом подчеркивания. Пример:
final String DIRECTOR_EMAIL="boss@localhost"

